apply plugin: 'com.android.library'
apply plugin: 'com.jfrog.bintray'
apply plugin: 'com.github.dcendents.android-maven'

group='com.github.lazy'
// 这个version是区分library版本的，因此当我们需要更新library时记得修改这个version
version = "1.0.2"
android {
    compileSdkVersion 24
    buildToolsVersion "24.0.2"
    resourcePrefix "1"
    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 24
        versionCode 2
        versionName version
    }
    buildTypes {
        release {
            buildConfigField "boolean", "LOG_DEBUG", "false"
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'),
                    'proguard-rules.pro'
        }
        debug {
            buildConfigField "boolean", "LOG_DEBUG", "true"
        }
    }
    compileOptions {
        targetCompatibility 1.8
        sourceCompatibility 1.8
    }
}
dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    testCompile 'junit:junit:4.12'
    compile 'com.android.support:support-v4:24.2.1'
    compile 'com.android.support:support-annotations:24.2.1'
    compile 'com.android.support:appcompat-v7:24.2.1'
    compile 'com.android.support:design:24.2.1'
    compile 'com.android.support:cardview-v7:24.2.1'
    compile files('lib/zxing.jar')
    compile files('lib/alipaySdk-20160516.jar')
    compile files('lib/commons-codec-1.6.jar')
    compile files('lib/libammsdk.jar')
    compile files('lib/Parse-1.9.4.jar')
    compile 'com.android.support:recyclerview-v7:24.2.1'
    //retrofit和rxjava
    compile 'com.squareup.retrofit2:retrofit:2.0.0-beta3'
    compile 'com.squareup.okhttp3:logging-interceptor:3.1.2'
    compile 'io.reactivex:rxjava:1.2.1'
    compile 'io.reactivex:rxandroid:1.2.1'
    compile 'com.squareup.retrofit2:converter-gson:2.0.0-beta4'
    compile 'com.squareup.retrofit2:adapter-rxjava:2.0.0-beta4'
    compile 'com.flyco.tablayout:FlycoTabLayout_Lib:2.0.8@aar'
    //菜单栏
    compile 'com.android.support:multidex:1.0.0'
    //分包
    compile 'com.alibaba:fastjson:1.2.8'
    //json解析封装框架
    compile 'com.commit451:PhotoView:1.2.4'
    //图片缩放
    compile 'com.orhanobut:logger:1.13'
    //打印日志
    compile 'com.github.bumptech.glide:glide:3.6.1'
    //显示图片框架
    compile 'com.jakewharton:butterknife:7.0.1'
    //view注解
    compile 'com.github.clans:fab:1.6.4'
    //悬浮动画菜单
    compile 'cn.hugeterry.updatefun:updatefun:1.8.6'
    //fire.im自动更新
    compile 'com.umeng.analytics:analytics:latest.integration'
    //友盟统计

}
// 项目的主页
def siteUrl = 'https://github.com/Superingxz/Lazy'
// Git仓库的url
def gitUrl = 'https://github.com/Superingxz/Lazy.git'

group = "com.github.lazylibrary" // Maven Group ID for the artifact，一般填你唯一的包名
install {
    repositories.mavenInstaller {
        // This generates POM.xml with proper parameters
        pom {
            project {
                packaging 'aar'
                // Add your description here
                name '常用的工具类集合' //项目描述
                url siteUrl
                // Set your license
                licenses {
                    license {
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id 'lazy' //填写开发者基本信息
                        name 'lazy'
                        email '1803117759@qq.com'
                    }
                }
                scm {
                    connection gitUrl
                    developerConnection gitUrl
                    url siteUrl
                }
            }
        }
    }
}
task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}
task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath +=
            project.files(android.getBootClasspath().join(File.pathSeparator))
    failOnError false
}
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}
artifacts {
    archives javadocJar
    archives sourcesJar
}
Properties properties = new Properties()
properties.load(
        project.rootProject.file('local.properties').newDataInputStream())
bintray {
    user = properties.getProperty("bintray.user")
    key = properties.getProperty("bintray.apikey")
    configurations = ['archives']
    pkg {
        repo = "maven" //发布到Bintray的那个仓库里，默认账户有四个库，我们这里上传到maven库
        name = "utils" //发布到Bintray上的项目名字
        websiteUrl = siteUrl
        vcsUrl = gitUrl
        licenses = ["Apache-2.0"]
        publish = true
    }
    javadoc {
        options{
            encoding "UTF-8"
            charSet 'UTF-8'
            author true
            version true
            links "http://docs.oracle.com/javase/7/docs/api"
        }
    }
}

